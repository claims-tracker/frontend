/**
 * Generated by @openapi-codegen
 *
 * @version v1
 */
/**
 * 1 = Name
 *
 * @format int32
 */
export type EntityPropertyNameEnum = 1;

export type EntityPropertyNameEnumFilterWebDTO = {
  /**
   * 1 = Name
   *
   * @format int32
   */
  field?: EntityPropertyNameEnum;
  /**
   * * **1** - Equal
   * * **2** - Not equal
   * * **3** - Less than
   * * **4** - Less than or equal
   * * **5** - Greater than
   * * **6** - Greater than or equal
   * * **7** - Starts with
   * * **8** - Ends with
   * * **9** - Contains
   * * **10** - Not contains
   *
   *
   * 1 = Eq
   *
   * 2 = Neq
   *
   * 3 = Lt
   *
   * 4 = Lte
   *
   * 5 = Gt
   *
   * 6 = Gte
   *
   * 7 = StartsWith
   *
   * 8 = EndsWith
   *
   * 9 = Contains
   *
   * 10 = NotContains
   *
   * @format int32
   */
  operator?: FilterOperatorEnum;
  value?: string | null;
  /**
   * * **1** - And
   * * **2** - Or
   *
   *
   * 1 = And
   *
   * 2 = Or
   *
   * @format int32
   */
  logic?: FilterLogicEnum;
  filters?: EntityPropertyNameEnumFilterWebDTO[] | null;
};

export type EntityPropertyNameEnumSortWebDTO = {
  /**
   * 1 = Name
   *
   * @format int32
   */
  field?: EntityPropertyNameEnum;
  /**
   * * **1** - Ascending
   * * **2** - Descending
   *
   *
   * 1 = Ascending
   *
   * 2 = Descending
   *
   * @format int32
   */
  order?: OrderByEnum;
};

/**
 * 1 = Company
 *
 * 2 = Individual
 *
 * @format int32
 */
export type EntityTypeEnum = 1 | 2;

export type EntityWebDTO = {
  /**
   * @format int64
   */
  id?: number;
  createdByUserId?: string | null;
  /**
   * @format date-time
   */
  createdOn?: string;
  /**
   * @format int32
   */
  pledgesCount?: number;
  /**
   * @format int32
   */
  fullfiledPledgesCount?: number;
  /**
   * @format int32
   */
  failedPledgesCount?: number;
  /**
   * @format int32
   */
  pendingPledgesCount?: number;
  /**
   * @format int32
   */
  delayedPledgesCount?: number;
  name?: string | null;
  description?: string | null;
  /**
   * 1 = Company
   *
   * 2 = Individual
   *
   * @format int32
   */
  type?: EntityTypeEnum;
};

export type EntityWebDTOPaginatedDataWebDTO = {
  /**
   * @format int32
   */
  page?: number;
  /**
   * @format int64
   */
  count?: number;
  items?: EntityWebDTO[] | null;
  /**
   * @format int32
   */
  totalPages?: number;
  /**
   * @format int64
   */
  totalCount?: number;
};

/**
 * * **1** - And
 * * **2** - Or
 *
 *
 * 1 = And
 *
 * 2 = Or
 *
 * @format int32
 */
export type FilterLogicEnum = 1 | 2;

/**
 * * **1** - Equal
 * * **2** - Not equal
 * * **3** - Less than
 * * **4** - Less than or equal
 * * **5** - Greater than
 * * **6** - Greater than or equal
 * * **7** - Starts with
 * * **8** - Ends with
 * * **9** - Contains
 * * **10** - Not contains
 *
 *
 * 1 = Eq
 *
 * 2 = Neq
 *
 * 3 = Lt
 *
 * 4 = Lte
 *
 * 5 = Gt
 *
 * 6 = Gte
 *
 * 7 = StartsWith
 *
 * 8 = EndsWith
 *
 * 9 = Contains
 *
 * 10 = NotContains
 *
 * @format int32
 */
export type FilterOperatorEnum = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;

export type GetEntitiesWebResponseDTO = {
  entities?: EntityWebDTOPaginatedDataWebDTO;
};

export type GetPledgesWebResponseDTO = {
  pledges?: PledgeWebDTOPaginatedDataWebDTO;
};

/**
 * * **1** - Ascending
 * * **2** - Descending
 *
 *
 * 1 = Ascending
 *
 * 2 = Descending
 *
 * @format int32
 */
export type OrderByEnum = 1 | 2;

/**
 * 1 = Name
 *
 * @format int32
 */
export type PledgePropertyNameEnum = 1;

export type PledgePropertyNameEnumFilterWebDTO = {
  /**
   * 1 = Name
   *
   * @format int32
   */
  field?: PledgePropertyNameEnum;
  /**
   * * **1** - Equal
   * * **2** - Not equal
   * * **3** - Less than
   * * **4** - Less than or equal
   * * **5** - Greater than
   * * **6** - Greater than or equal
   * * **7** - Starts with
   * * **8** - Ends with
   * * **9** - Contains
   * * **10** - Not contains
   *
   *
   * 1 = Eq
   *
   * 2 = Neq
   *
   * 3 = Lt
   *
   * 4 = Lte
   *
   * 5 = Gt
   *
   * 6 = Gte
   *
   * 7 = StartsWith
   *
   * 8 = EndsWith
   *
   * 9 = Contains
   *
   * 10 = NotContains
   *
   * @format int32
   */
  operator?: FilterOperatorEnum;
  value?: string | null;
  /**
   * * **1** - And
   * * **2** - Or
   *
   *
   * 1 = And
   *
   * 2 = Or
   *
   * @format int32
   */
  logic?: FilterLogicEnum;
  filters?: PledgePropertyNameEnumFilterWebDTO[] | null;
};

export type PledgePropertyNameEnumSortWebDTO = {
  /**
   * 1 = Name
   *
   * @format int32
   */
  field?: PledgePropertyNameEnum;
  /**
   * * **1** - Ascending
   * * **2** - Descending
   *
   *
   * 1 = Ascending
   *
   * 2 = Descending
   *
   * @format int32
   */
  order?: OrderByEnum;
};

/**
 * 1 = Pending
 *
 * 2 = Fulfilled
 *
 * 4 = Failed
 *
 * 8 = Late
 *
 * @format int32
 */
export type PledgeStatusEnum = 1 | 2 | 4 | 8;

/**
 * 1 = Delay
 *
 * 2 = Fullfiled
 *
 * 4 = Failed
 *
 * @format int32
 */
export type PledgeUpdateTypeEnum = 1 | 2 | 4;

export type PledgeUpdateWebDTO = {
  /**
   * @format int64
   */
  pledgeId?: number;
  createdByUserId?: string | null;
  /**
   * 1 = Delay
   *
   * 2 = Fullfiled
   *
   * 4 = Failed
   *
   * @format int32
   */
  type?: PledgeUpdateTypeEnum;
};

export type PledgeWebDTO = {
  /**
   * @format int64
   */
  id?: number;
  /**
   * @format date-time
   */
  createdOn?: string;
  pledgeUpdates?: PledgeUpdateWebDTO[] | null;
  /**
   * @format int64
   */
  entityId?: number;
  createdByUserId?: string | null;
  /**
   * 1 = Pending
   *
   * 2 = Fulfilled
   *
   * 4 = Failed
   *
   * 8 = Late
   *
   * @format int32
   */
  status?: PledgeStatusEnum;
};

export type PledgeWebDTOPaginatedDataWebDTO = {
  /**
   * @format int32
   */
  page?: number;
  /**
   * @format int64
   */
  count?: number;
  items?: PledgeWebDTO[] | null;
  /**
   * @format int32
   */
  totalPages?: number;
  /**
   * @format int64
   */
  totalCount?: number;
};

export type PostEntitiesWebRequestDTO = {
  entities?: PostEntityWebDTO[] | null;
};

export type PostEntitiesWebResponseDTO = {
  ids?: number[] | null;
};

export type PostEntityWebDTO = {
  name?: string | null;
  description?: string | null;
  /**
   * 1 = Company
   *
   * 2 = Individual
   *
   * @format int32
   */
  type?: EntityTypeEnum;
};

export type PutEntitiesWebRequestDTO = {
  entities?: PutEntityWebDTO[] | null;
};

export type PutEntitiesWebResponseDTO = Record<string, any>;

export type PutEntityWebDTO = {
  /**
   * @format int64
   */
  id?: number;
  name?: string | null;
  description?: string | null;
  /**
   * 1 = Company
   *
   * 2 = Individual
   *
   * @format int32
   */
  type?: EntityTypeEnum;
};
